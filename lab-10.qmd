---
project:
  title: "Lab 10: Distances and the Border Zone"
  subtitle: 'Ecosystem Science and Sustainability 330'
  output-dir: docs
  type: website

format:
  html:
    self-contained: true
    
execute:
  echo: true
---

# Lab 10: Distances and the Border Zone

```{r}
remotes::install_github("ropensci/USAboundaries")
remotes::install_github("ropensci/USAboundariesData")
remotes::install_github("mikejohnson51/AOI")
remotes::install_github("ropenscilabs/rnaturalearthdata")

# spatial data science
library(tidyverse)
library(sf)
library(dplyr)
library(units)
library(flextable)

# Data
library(AOI)
library(USAboundaries)
library(USAboundariesData)
library(rnaturalearthdata)

# Visualization
library(gghighlight)
library(ggrepel)
library(ggplot2)
library(knitr)
```

## Question 1

```{r}
# 1.1 Define a Projection
eqdc <- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'
eqcd <- st_crs(5070)
```

```{r}
# 1.3 Get country boundaries for Mexico, the US, and Canada
mx_us_can <- aoi_get(country = c("MX", "CA", "USA"))

df <- data.frame(name = state.name, 
                X = state.center$x, 
                Y = state.center$y)
```

```{r}
# 1.4 Get City locations from the CSV file
uscities <- read_csv("./data/simplemaps_uscities_basicv1.90(1)/uscities.csv")

cities_sf <- uscities %>% 
  st_as_sf(coords = c("lng", "lat"), crs = 4326, remove = FALSE) %>% 
  st_transform(5070) %>% 
  mutate

states <- us_states()
state_boundaries <- st_cast(states, "MULTILINESTRING") %>% 
  st_transform(5070)

cities_sf <- st_transform(cities_sf, 5070)
state_boundaries <- st_transform(state_boundaries, 5070)
```

```{r}
# GCS
df_sf_gcs <- st_as_sf(df,
                      coords = c("X", "Y"),
                      crs = 4269)
```

# Question 2

```{r}
# 2.1 Distance to USA Border
state_boundaries_lines <- st_cast(state_boundaries, "MULTILINESTRING")

distance_matrix <- st_distance(cities_sf, state_boundaries_lines)

min_distances <- apply(distance_matrix, 1, min)

cities_distance <- cities_sf %>% 
  mutate(
    dist_to_state_border_m = as.numeric(min_distances),
    dist_to_state_border_km = round(dist_to_state_border_m / 1000, 1)
  )

farthest_cities <- cities_distance %>% 
  arrange(desc(dist_to_state_border_m)) %>% 
  slice_head(n = 5) %>% 
  select(city, state_name = state_id, distance_km = dist_to_state_border_km)

farthest_cities %>% 
  select(city, state_name, distance_km) %>% 
  flextable() %>% 
  set_header_labels(
    city = "City",
    state_name = "State",
    distance_km = "Distance to State Border (km)"
  ) %>% 
  autofit()
```

```{r}
# 2.2 Distance to States
```

